create type public.status_pedido as enum (
  'pendente', 
  'entregue',
  'cancelado'
);

create type public.forma_pagamento as enum (
  'cartao_credito',
  'boleto', 
  'pix'
);

create table public.pedidos (
  id bigint generated by default as identity not null,
  id_produto bigint null,
  id_cliente bigint null,
  status public.status_pedido not null default 'pendente',
  quantidade integer not null check (quantidade > 0),
  total numeric(10,2) not null check (total >= 0),
  forma_pagamento public.forma_pagamento not null default 'cartao_credito',
  created_at timestamp with time zone not null default now(),
  constraint pedidos_pkey primary key (id),
  constraint pedidos_id_cliente_fkey foreign KEY (id_cliente) references clientes (id),
  constraint pedidos_id_produto_fkey foreign KEY (id_produto) references produtos (id)
) TABLESPACE pg_default;

ALTER TABLE public.pedidos ENABLE ROW LEVEL SECURITY;

-- SELECT
CREATE POLICY pedidos_select_own ON public.pedidos
  FOR SELECT
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM public.clientes c
      WHERE c.id = id_cliente
        AND c.auth_user_id = (SELECT auth.uid())
    )
  );

-- INSERT: client may insert only if id_cliente refers to their cliente
CREATE POLICY pedidos_insert_own ON public.pedidos
  FOR INSERT
  TO authenticated
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM public.clientes c
      WHERE c.id = id_cliente
        AND c.auth_user_id = (SELECT auth.uid())
    )
  );

-- UPDATE
CREATE POLICY pedidos_update_own ON public.pedidos
  FOR UPDATE
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM public.clientes c
      WHERE c.id = id_cliente
        AND c.auth_user_id = (SELECT auth.uid())
    )
  )
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM public.clientes c
      WHERE c.id = id_cliente
        AND c.auth_user_id = (SELECT auth.uid())
    )
  );

-- DELETE (same rule as update/select)
CREATE POLICY pedidos_delete_own ON public.pedidos
  FOR DELETE
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM public.clientes c
      WHERE c.id = id_cliente
        AND c.auth_user_id = (SELECT auth.uid())
    )
  );